<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\grlib_demo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\grlib_demo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Sun Dec 10 18:32:35 2017
<BR><P>
<H3>Maximum Stack Usage =        360 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SliderMsgProc &rArr; SliderPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[21]">Reset_Handler</a>
 <LI><a href="#[12]">NmiSR</a>
 <LI><a href="#[13]">FaultISR</a>
 <LI><a href="#[14]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[25]">SysCtlDelay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">SysCtlDelay</a><BR>
 <LI><a href="#[52]">SSIDataPut</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[52]">SSIDataPut</a><BR>
 <LI><a href="#[12]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">NmiSR</a><BR>
 <LI><a href="#[13]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">FaultISR</a><BR>
 <LI><a href="#[14]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[0]">CanvasMsgProc</a> from canvas.o(i.CanvasMsgProc) referenced 68 times from grlib_demo.o(.data)
 <LI><a href="#[4]">CheckBoxMsgProc</a> from checkbox.o(i.CheckBoxMsgProc) referenced 6 times from grlib_demo.o(.data)
 <LI><a href="#[8]">CircularButtonMsgProc</a> from pushbutton.o(i.CircularButtonMsgProc) referenced 4 times from grlib_demo.o(.data)
 <LI><a href="#[f]">ContainerMsgProc</a> from container.o(i.ContainerMsgProc) referenced 10 times from grlib_demo.o(.data)
 <LI><a href="#[13]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[17]">GrDefaultStringRenderer</a> from string.o(i.GrDefaultStringRenderer) referenced from context.o(i.GrContextInit)
 <LI><a href="#[20]">GrMapISO8859_1_Unicode</a> from charmap.o(i.GrMapISO8859_1_Unicode) referenced 2 times from context.o(.constdata)
 <LI><a href="#[14]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 113 times from startup_rvmdk.o(RESET)
 <LI><a href="#[1e]">Kentec320x240x16_SSD2119ColorTranslate</a> from kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119ColorTranslate) referenced from kentec320x240x16_ssd2119_spi.o(.constdata)
 <LI><a href="#[1f]">Kentec320x240x16_SSD2119Flush</a> from kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119Flush) referenced from kentec320x240x16_ssd2119_spi.o(.constdata)
 <LI><a href="#[1b]">Kentec320x240x16_SSD2119LineDrawH</a> from kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119LineDrawH) referenced from kentec320x240x16_ssd2119_spi.o(.constdata)
 <LI><a href="#[1c]">Kentec320x240x16_SSD2119LineDrawV</a> from kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119LineDrawV) referenced from kentec320x240x16_ssd2119_spi.o(.constdata)
 <LI><a href="#[19]">Kentec320x240x16_SSD2119PixelDraw</a> from kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119PixelDraw) referenced from kentec320x240x16_ssd2119_spi.o(.constdata)
 <LI><a href="#[1a]">Kentec320x240x16_SSD2119PixelDrawMultiple</a> from kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119PixelDrawMultiple) referenced from kentec320x240x16_ssd2119_spi.o(.constdata)
 <LI><a href="#[1d]">Kentec320x240x16_SSD2119RectFill</a> from kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119RectFill) referenced from kentec320x240x16_ssd2119_spi.o(.constdata)
 <LI><a href="#[12]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[7]">OnButtonPress</a> from grlib_demo.o(i.OnButtonPress) referenced 12 times from grlib_demo.o(.data)
 <LI><a href="#[3]">OnCanvasPaint</a> from grlib_demo.o(i.OnCanvasPaint) referenced 2 times from grlib_demo.o(.data)
 <LI><a href="#[5]">OnCheckChange</a> from grlib_demo.o(i.OnCheckChange) referenced 6 times from grlib_demo.o(.data)
 <LI><a href="#[1]">OnIntroPaint</a> from grlib_demo.o(i.OnIntroPaint) referenced 2 times from grlib_demo.o(.data)
 <LI><a href="#[e]">OnNext</a> from grlib_demo.o(i.OnNext) referenced 2 times from grlib_demo.o(.data)
 <LI><a href="#[d]">OnPrevious</a> from grlib_demo.o(i.OnPrevious) referenced 2 times from grlib_demo.o(.data)
 <LI><a href="#[2]">OnPrimitivePaint</a> from grlib_demo.o(i.OnPrimitivePaint) referenced 2 times from grlib_demo.o(.data)
 <LI><a href="#[a]">OnRadioChange</a> from grlib_demo.o(i.OnRadioChange) referenced 12 times from grlib_demo.o(.data)
 <LI><a href="#[c]">OnSliderChange</a> from grlib_demo.o(i.OnSliderChange) referenced 10 times from grlib_demo.o(.data)
 <LI><a href="#[9]">RadioButtonMsgProc</a> from radiobutton.o(i.RadioButtonMsgProc) referenced 12 times from grlib_demo.o(.data)
 <LI><a href="#[9]">RadioButtonMsgProc</a> from radiobutton.o(i.RadioButtonMsgProc) referenced from radiobutton.o(i.RadioButtonClick)
 <LI><a href="#[6]">RectangularButtonMsgProc</a> from pushbutton.o(i.RectangularButtonMsgProc) referenced 12 times from grlib_demo.o(.data)
 <LI><a href="#[21]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[b]">SliderMsgProc</a> from slider.o(i.SliderMsgProc) referenced 12 times from grlib_demo.o(.data)
 <LI><a href="#[15]">TouchScreenIntHandler</a> from touch.o(i.TouchScreenIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[10]">WidgetDefaultMsgProc</a> from widget.o(i.WidgetDefaultMsgProc) referenced 2 times from widget.o(.data)
 <LI><a href="#[18]">WidgetPointerMessage</a> from widget.o(i.WidgetPointerMessage) referenced from grlib_demo.o(i.main)
 <LI><a href="#[16]">main</a> from grlib_demo.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[22]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[6d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[23]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[26]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[6f]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[70]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[71]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[72]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[25]"></a>SysCtlDelay</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sysctl.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119Init
</UL>

<P><STRONG><a name="[62]"></a>WidgetMutexGet</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, widget.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
</UL>

<P><STRONG><a name="[24]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[73]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>ADCHardwareOversampleConfigure</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc.o(i.ADCHardwareOversampleConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[5b]"></a>ADCIntEnable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, adc.o(i.ADCIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[58]"></a>ADCSequenceConfigure</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, adc.o(i.ADCSequenceConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADCSequenceConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[5a]"></a>ADCSequenceEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(i.ADCSequenceEnable))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[59]"></a>ADCSequenceStepConfigure</STRONG> (Thumb, 154 bytes, Stack size 4 bytes, adc.o(i.ADCSequenceStepConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADCSequenceStepConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[0]"></a>CanvasMsgProc</STRONG> (Thumb, 448 bytes, Stack size 72 bytes, canvas.o(i.CanvasMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = CanvasMsgProc &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontHeightGet
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
</UL>
<BR>[Address Reference Count : 6]<UL><LI> grlib_demo.o(.data)
<LI> grlib_demo.o(.data)
<LI> grlib_demo.o(.data)
<LI> grlib_demo.o(.data)
<LI> grlib_demo.o(.data)
<LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>CheckBoxMsgProc</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, checkbox.o(i.CheckBoxMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = CheckBoxMsgProc &rArr; CheckBoxPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxPaint
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>CircularButtonMsgProc</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, pushbutton.o(i.CircularButtonMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = CircularButtonMsgProc &rArr; CircularButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularButtonPaint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>ContainerMsgProc</STRONG> (Thumb, 368 bytes, Stack size 72 bytes, container.o(i.ContainerMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ContainerMsgProc &rArr; GrStringWidthGet &rArr; GrFontGlyphDataGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDraw
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontBaselineGet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
</UL>
<BR>[Address Reference Count : 4]<UL><LI> grlib_demo.o(.data)
<LI> grlib_demo.o(.data)
<LI> grlib_demo.o(.data)
<LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[66]"></a>FPUEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fpu.o(i.FPUEnable))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>FPULazyStackingEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fpu.o(i.FPULazyStackingEnable))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>GPIODirModeSet</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, gpio.o(i.GPIODirModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>

<P><STRONG><a name="[37]"></a>GPIOPadConfigSet</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, gpio.o(i.GPIOPadConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOPadConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>

<P><STRONG><a name="[42]"></a>GPIOPinConfigure</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinConfigure))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPILCDInterface
</UL>

<P><STRONG><a name="[36]"></a>GPIOPinTypeGPIOOutput</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeGPIOOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPILCDInterface
</UL>

<P><STRONG><a name="[39]"></a>GPIOPinTypeSSI</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, gpio.o(i.GPIOPinTypeSSI))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIOPinTypeSSI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPadConfigSet
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIODirModeSet
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPILCDInterface
</UL>

<P><STRONG><a name="[48]"></a>GPIOPinWrite</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gpio.o(i.GPIOPinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataSPI
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandSPI
</UL>

<P><STRONG><a name="[34]"></a>GrCircleDraw</STRONG> (Thumb, 514 bytes, Stack size 40 bytes, circle.o(i.GrCircleDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GrCircleDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnPrimitivePaint
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularButtonPaint
</UL>

<P><STRONG><a name="[33]"></a>GrCircleFill</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, circle.o(i.GrCircleFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GrCircleFill &rArr; GrLineDrawH
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDrawH
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnPrimitivePaint
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularButtonPaint
</UL>

<P><STRONG><a name="[28]"></a>GrContextClipRegionSet</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, context.o(i.GrContextClipRegionSet))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxPaint
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderPaint
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularButtonPaint
</UL>

<P><STRONG><a name="[2c]"></a>GrContextFontSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, string.o(i.GrContextFontSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrContextFontSet &rArr; UpdateContextCharMapping
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateContextCharMapping
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnPrimitivePaint
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnIntroPaint
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnCanvasPaint
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxPaint
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderPaint
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularButtonPaint
</UL>

<P><STRONG><a name="[27]"></a>GrContextInit</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, context.o(i.GrContextInit))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxPaint
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderPaint
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularButtonPaint
</UL>

<P><STRONG><a name="[17]"></a>GrDefaultStringRenderer</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, string.o(i.GrDefaultStringRenderer))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GrDefaultStringRenderer &rArr; GrFontGlyphRender
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontGlyphRender
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontGlyphDataGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> context.o(i.GrContextInit)
</UL>
<P><STRONG><a name="[35]"></a>GrFontBaselineGet</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, string.o(i.GrFontBaselineGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GrFontBaselineGet
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnCanvasPaint
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderPaint
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularButtonPaint
</UL>

<P><STRONG><a name="[3c]"></a>GrFontGlyphDataGet</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, string.o(i.GrFontGlyphDataGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrFontGlyphDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrDefaultStringRenderer
</UL>

<P><STRONG><a name="[3d]"></a>GrFontGlyphRender</STRONG> (Thumb, 646 bytes, Stack size 64 bytes, string.o(i.GrFontGlyphRender))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GrFontGlyphRender
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrDefaultStringRenderer
</UL>

<P><STRONG><a name="[2e]"></a>GrFontHeightGet</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, string.o(i.GrFontHeightGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GrFontHeightGet
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxPaint
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
</UL>

<P><STRONG><a name="[2b]"></a>GrImageDraw</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, image.o(i.GrImageDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalImageDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnPrimitivePaint
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxPaint
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderPaint
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularButtonPaint
</UL>

<P><STRONG><a name="[31]"></a>GrLineDraw</STRONG> (Thumb, 638 bytes, Stack size 40 bytes, line.o(i.GrLineDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GrLineDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnPrimitivePaint
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnCanvasPaint
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxPaint
</UL>

<P><STRONG><a name="[3a]"></a>GrLineDrawH</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, line.o(i.GrLineDrawH))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrLineDrawH
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrCircleFill
</UL>

<P><STRONG><a name="[3f]"></a>GrLineDrawV</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, line.o(i.GrLineDrawV))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrLineDrawV
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
</UL>

<P><STRONG><a name="[20]"></a>GrMapISO8859_1_Unicode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, charmap.o(i.GrMapISO8859_1_Unicode))
<BR>[Address Reference Count : 1]<UL><LI> context.o(.constdata)
</UL>
<P><STRONG><a name="[2a]"></a>GrRectDraw</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, rectangle.o(i.GrRectDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GrRectDraw &rArr; GrLineDrawV
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDrawV
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDrawH
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnPrimitivePaint
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxPaint
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderPaint
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[29]"></a>GrRectFill</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, rectangle.o(i.GrRectFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GrRectFill
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnPrimitivePaint
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxPaint
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderPaint
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>

<P><STRONG><a name="[55]"></a>GrRectIntersectGet</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, rectangle.o(i.GrRectIntersectGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GrRectIntersectGet
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderPaint
</UL>

<P><STRONG><a name="[2f]"></a>GrStringDraw</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, string.o(i.GrStringDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GrStringDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnPrimitivePaint
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnIntroPaint
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnCanvasPaint
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxPaint
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderPaint
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularButtonPaint
</UL>

<P><STRONG><a name="[2d]"></a>GrStringWidthGet</STRONG> (Thumb, 192 bytes, Stack size 64 bytes, string.o(i.GrStringWidthGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GrStringWidthGet &rArr; GrFontGlyphDataGet
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontGlyphDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnCanvasPaint
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderPaint
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularButtonPaint
</UL>

<P><STRONG><a name="[5c]"></a>IntEnable</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[47]"></a>Kentec320x240x16_SSD2119Init</STRONG> (Thumb, 466 bytes, Stack size 16 bytes, kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Kentec320x240x16_SSD2119Init &rArr; InitSPILCDInterface &rArr; GPIOPinTypeSSI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataSPI
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandSPI
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPILCDInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7]"></a>OnButtonPress</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, grlib_demo.o(i.OnButtonPress))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OnButtonPress &rArr; WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>OnCanvasPaint</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, grlib_demo.o(i.OnCanvasPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = OnCanvasPaint &rArr; GrStringWidthGet &rArr; GrFontGlyphDataGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDraw
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontBaselineGet
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>OnCheckChange</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, grlib_demo.o(i.OnCheckChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OnCheckChange &rArr; WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>OnIntroPaint</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, grlib_demo.o(i.OnIntroPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OnIntroPaint &rArr; GrStringDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>OnNext</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, grlib_demo.o(i.OnNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OnNext &rArr; WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetRemove
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>OnPrevious</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, grlib_demo.o(i.OnPrevious))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OnPrevious &rArr; WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetRemove
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>OnPrimitivePaint</STRONG> (Thumb, 446 bytes, Stack size 40 bytes, grlib_demo.o(i.OnPrimitivePaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = OnPrimitivePaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDraw
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrCircleFill
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrCircleDraw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>OnRadioChange</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, grlib_demo.o(i.OnRadioChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OnRadioChange &rArr; WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>OnSliderChange</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, grlib_demo.o(i.OnSliderChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = OnSliderChange &rArr; usprintf &rArr; uvsnprintf &rArr; ustrncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>RadioButtonMsgProc</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, radiobutton.o(i.RadioButtonMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = RadioButtonMsgProc &rArr; RadioButtonClick &rArr; RadioButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonClick
</UL>
<BR>[Address Reference Count : 2]<UL><LI> grlib_demo.o(.data)
<LI> radiobutton.o(i.RadioButtonClick)
</UL>
<P><STRONG><a name="[6]"></a>RectangularButtonMsgProc</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, pushbutton.o(i.RectangularButtonMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = RectangularButtonMsgProc &rArr; RectangularButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonPaint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[65]"></a>SSIBusy</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ssi.o(i.SSIBusy))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataSPI
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandSPI
</UL>

<P><STRONG><a name="[43]"></a>SSIConfigSetExpClk</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, ssi.o(i.SSIConfigSetExpClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SSIConfigSetExpClk
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPILCDInterface
</UL>

<P><STRONG><a name="[45]"></a>SSIDataGetNonBlocking</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ssi.o(i.SSIDataGetNonBlocking))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPILCDInterface
</UL>

<P><STRONG><a name="[52]"></a>SSIDataPut</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ssi.o(i.SSIDataPut))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataSPI
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandSPI
</UL>

<P><STRONG><a name="[44]"></a>SSIEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ssi.o(i.SSIEnable))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPILCDInterface
</UL>

<P><STRONG><a name="[b]"></a>SliderMsgProc</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, slider.o(i.SliderMsgProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = SliderMsgProc &rArr; SliderPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetDefaultMsgProc
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderValueToPosition
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderPaint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSPILCDInterface
</UL>

<P><STRONG><a name="[5d]"></a>TimerConfigure</STRONG> (Thumb, 88 bytes, Stack size 4 bytes, timer.o(i.TimerConfigure))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TimerConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[5f]"></a>TimerControlTrigger</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, timer.o(i.TimerControlTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[60]"></a>TimerEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer.o(i.TimerEnable))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[5e]"></a>TimerLoadSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, timer.o(i.TimerLoadSet))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
</UL>

<P><STRONG><a name="[6a]"></a>TouchScreenCallbackSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touch.o(i.TouchScreenCallbackSet))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>TouchScreenInit</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, touch.o(i.TouchScreenInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TouchScreenInit &rArr; GPIOPinTypeGPIOOutput &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerLoadSet
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerEnable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerControlTrigger
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerConfigure
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceStepConfigure
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceEnable
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSequenceConfigure
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCIntEnable
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCHardwareOversampleConfigure
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15]"></a>TouchScreenIntHandler</STRONG> (Thumb, 264 bytes, Stack size 40 bytes, touch.o(i.TouchScreenIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TouchScreenIntHandler &rArr; TouchScreenDebouncer
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenDebouncer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>WidgetAdd</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, widget.o(i.WidgetAdd))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnPrevious
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnNext
</UL>

<P><STRONG><a name="[10]"></a>WidgetDefaultMsgProc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widget.o(i.WidgetDefaultMsgProc))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderMsgProc
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonMsgProc
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonMsgProc
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContainerMsgProc
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularButtonMsgProc
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxMsgProc
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanvasMsgProc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>WidgetMessageQueueAdd</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, widget.o(i.WidgetMessageQueueAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMutexGet
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetPointerMessage
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnSliderChange
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnRadioChange
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnPrevious
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnNext
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnCheckChange
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnButtonPress
</UL>

<P><STRONG><a name="[63]"></a>WidgetMessageQueueProcess</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, widget.o(i.WidgetMessageQueueProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WidgetMessageQueueProcess &rArr; WidgetMessageSendPostOrder
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageSendPostOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>WidgetMessageSendPostOrder</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, widget.o(i.WidgetMessageSendPostOrder))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WidgetMessageSendPostOrder
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueProcess
</UL>

<P><STRONG><a name="[18]"></a>WidgetPointerMessage</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, widget.o(i.WidgetPointerMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WidgetPointerMessage &rArr; WidgetMessageQueueAdd
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> grlib_demo.o(i.main)
</UL>
<P><STRONG><a name="[4c]"></a>WidgetRemove</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, widget.o(i.WidgetRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WidgetRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnPrevious
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnNext
</UL>

<P><STRONG><a name="[76]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[77]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[78]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[16]"></a>main</STRONG> (Thumb, 290 bytes, Stack size 64 bytes, grlib_demo.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = main &rArr; Kentec320x240x16_SSD2119Init &rArr; InitSPILCDInterface &rArr; GPIOPinTypeSSI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAEnable
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAControlBaseSet
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueProcess
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetMessageQueueAdd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WidgetAdd
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenInit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenCallbackSet
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontBaselineGet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPULazyStackingEnable
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FPUEnable
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlDelay
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[68]"></a>uDMAControlBaseSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, udma.o(i.uDMAControlBaseSet))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>uDMAEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, udma.o(i.uDMAEnable))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>usprintf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, ustdlib.o(i.usprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = usprintf &rArr; uvsnprintf &rArr; ustrncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OnSliderChange
</UL>

<P><STRONG><a name="[6c]"></a>ustrncpy</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ustdlib.o(i.ustrncpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ustrncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uvsnprintf
</UL>

<P><STRONG><a name="[6b]"></a>uvsnprintf</STRONG> (Thumb, 580 bytes, Stack size 36 bytes, ustdlib.o(i.uvsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = uvsnprintf &rArr; ustrncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ustrncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usprintf
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[40]"></a>InitSPILCDInterface</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, kentec320x240x16_ssd2119_spi.o(i.InitSPILCDInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = InitSPILCDInterface &rArr; GPIOPinTypeSSI &rArr; GPIOPadConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIEnable
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataGetNonBlocking
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIConfigSetExpClk
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeSSI
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinTypeGPIOOutput
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinConfigure
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119Init
</UL>

<P><STRONG><a name="[1e]"></a>Kentec320x240x16_SSD2119ColorTranslate</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119ColorTranslate))
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119_spi.o(.constdata)
</UL>
<P><STRONG><a name="[1f]"></a>Kentec320x240x16_SSD2119Flush</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119Flush))
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119_spi.o(.constdata)
</UL>
<P><STRONG><a name="[1b]"></a>Kentec320x240x16_SSD2119LineDrawH</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119LineDrawH))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Kentec320x240x16_SSD2119LineDrawH &rArr; WriteDataSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataSPI
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandSPI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119_spi.o(.constdata)
</UL>
<P><STRONG><a name="[1c]"></a>Kentec320x240x16_SSD2119LineDrawV</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119LineDrawV))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Kentec320x240x16_SSD2119LineDrawV &rArr; WriteDataSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataSPI
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandSPI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119_spi.o(.constdata)
</UL>
<P><STRONG><a name="[19]"></a>Kentec320x240x16_SSD2119PixelDraw</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119PixelDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Kentec320x240x16_SSD2119PixelDraw &rArr; WriteDataSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataSPI
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandSPI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119_spi.o(.constdata)
</UL>
<P><STRONG><a name="[1a]"></a>Kentec320x240x16_SSD2119PixelDrawMultiple</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119PixelDrawMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Kentec320x240x16_SSD2119PixelDrawMultiple &rArr; WriteDataSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataSPI
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandSPI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119_spi.o(.constdata)
</UL>
<P><STRONG><a name="[1d]"></a>Kentec320x240x16_SSD2119RectFill</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, kentec320x240x16_ssd2119_spi.o(i.Kentec320x240x16_SSD2119RectFill))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Kentec320x240x16_SSD2119RectFill &rArr; WriteDataSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDataSPI
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCommandSPI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> kentec320x240x16_ssd2119_spi.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>WriteCommandSPI</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, kentec320x240x16_ssd2119_spi.o(i.WriteCommandSPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WriteCommandSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119Init
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119RectFill
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119PixelDrawMultiple
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119PixelDraw
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119LineDrawV
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119LineDrawH
</UL>

<P><STRONG><a name="[4a]"></a>WriteDataSPI</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, kentec320x240x16_ssd2119_spi.o(i.WriteDataSPI))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WriteDataSPI
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIDataPut
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSIBusy
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOPinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119Init
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119RectFill
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119PixelDrawMultiple
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119PixelDraw
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119LineDrawV
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Kentec320x240x16_SSD2119LineDrawH
</UL>

<P><STRONG><a name="[12]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>TouchScreenDebouncer</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, touch.o(i.TouchScreenDebouncer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TouchScreenDebouncer
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchScreenIntHandler
</UL>

<P><STRONG><a name="[30]"></a>CheckBoxPaint</STRONG> (Thumb, 566 bytes, Stack size 80 bytes, checkbox.o(i.CheckBoxPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = CheckBoxPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrLineDraw
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontHeightGet
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBoxMsgProc
</UL>

<P><STRONG><a name="[3e]"></a>InternalImageDraw</STRONG> (Thumb, 890 bytes, Stack size 120 bytes, image.o(i.InternalImageDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PixelTransparentDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
</UL>

<P><STRONG><a name="[46]"></a>PixelTransparentDraw</STRONG> (Thumb, 662 bytes, Stack size 80 bytes, image.o(i.PixelTransparentDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PixelTransparentDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalImageDraw
</UL>

<P><STRONG><a name="[32]"></a>CircularButtonPaint</STRONG> (Thumb, 408 bytes, Stack size 80 bytes, pushbutton.o(i.CircularButtonPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = CircularButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontBaselineGet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrCircleFill
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrCircleDraw
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CircularButtonMsgProc
</UL>

<P><STRONG><a name="[51]"></a>RectangularButtonPaint</STRONG> (Thumb, 418 bytes, Stack size 80 bytes, pushbutton.o(i.RectangularButtonPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = RectangularButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontBaselineGet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RectangularButtonMsgProc
</UL>

<P><STRONG><a name="[4f]"></a>RadioButtonClick</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, radiobutton.o(i.RadioButtonClick))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = RadioButtonClick &rArr; RadioButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonPaint
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonMsgProc
</UL>

<P><STRONG><a name="[50]"></a>RadioButtonPaint</STRONG> (Thumb, 506 bytes, Stack size 72 bytes, radiobutton.o(i.RadioButtonPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = RadioButtonPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrCircleFill
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrCircleDraw
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontHeightGet
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonMsgProc
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RadioButtonClick
</UL>

<P><STRONG><a name="[53]"></a>SliderPaint</STRONG> (Thumb, 790 bytes, Stack size 120 bytes, slider.o(i.SliderPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = SliderPaint &rArr; GrImageDraw &rArr; InternalImageDraw &rArr; PixelTransparentDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringWidthGet
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrStringDraw
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectFill
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectDraw
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrImageDraw
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrFontBaselineGet
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextInit
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextClipRegionSet
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderValueToPosition
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrRectIntersectGet
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderMsgProc
</UL>

<P><STRONG><a name="[54]"></a>SliderValueToPosition</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, slider.o(i.SliderValueToPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SliderValueToPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderMsgProc
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderPaint
</UL>

<P><STRONG><a name="[3b]"></a>UpdateContextCharMapping</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, string.o(i.UpdateContextCharMapping))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UpdateContextCharMapping
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GrContextFontSet
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
